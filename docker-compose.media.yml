version: "3.8"

networks:
  front:
    external:
      name: proxy
  vpn:
    driver: bridge
      
volumes:
  media:
    name: ${TANK}/media
  download:
    name: ${TANK}/download
      
services:

  # Streaming
  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    env_file:
      - .env.base
    devices:
      - /dev/vchiq:/dev/vchiq
    volumes:
      - ${TANK}/appdata/jellyfin:/config
      - ${TANK}/media:/data/media
    networks:
      - front
    # expose:
    # - 8096:8096
  
  # Torrent downloader
  deluge:
    image: lscr.io/linuxserver/deluge
    container_name: deluge
    restart: unless-stopped 
    depends_on:
      - vpn
    env_file:
      - .env.base
    environment:
      - DELUGE_LOGLEVEL=error
    volumes:
      - ${TANK}/appdata/deluge:/config
      - ${TANK}/download:/data/download
    networks:
      - front
      - vpn
    ports:
    #  - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      
  vpn:
    image: qmcgaw/gluetun
    container_name: vpn
    restart: unless-stopped
    cap_add:
      - net_admin # required to modify network interfaces
    volumes:
      - /root/vpn:/gluetun # OpenVPN configuration
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=cyberghost
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_COUNTRIES=France
    networks:
      - vpn
      
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    depends_on:
      - deluge
    env_file:
      - .env.base
    user: "${PUID}:${PGID}"
    volumes:
      - ${TANK}/appdata/sonarr:/config
      - ${TANK}/media/videos/series:/data/series
      - ${TANK}/download:/data/download
    networks:
      - front
      - vpn
    ports:
      - 8989:8989
 
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    depends_on:
      - deluge
    volumes:
      - ${TANK}/appdata/radarr:/config
      - ${TANK}/media/videos/films:/data/films
      - ${TANK}/download:/data/download
    networks:
      - front
      - vpn
    #ports:
    #  - 7878:7878
  
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    restart: unless-stopped
    depends_on:
      - deluge
    volumes:
      - ${TANK}/appdata/lidarr:/config
      - ${TANK}/media/musiques:/data/musiques
      - ${TANK}/download:/data/download
    networks:
      - front
      - vpn
    #ports:
    #  - 8686:8686

  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    restart: unless-stopped
    environment:
      - AUTO_UPDATE=true
    volumes:
      - ${TANK}/appdata/jackett:/config
    networks:
      - front
    # ports:
    #  - 9117:9117
    
